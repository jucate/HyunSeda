/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.hyunseda.market.presentation;

import co.com.hyunseda.market.dataAccess.Product;
import co.com.hyunseda.market.presentation.observer.IOberver;
import co.com.hyunseda.market.service.ItemCompra;
import co.com.hyunseda.market.service.Service;
import java.util.ArrayList;

import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Libardo Pantoja, Julio A. Hurtado
 */
public class GUIProductsFind extends javax.swing.JDialog implements IOberver{
    private Service service;
    private GUICarrito carrito;
    /**
     * Creates new form GUIProductsFind
     */
    public GUIProductsFind(java.awt.Frame parent, boolean modal, Service service) {
        super(parent, modal);
        initComponents();
        initializeTable();
        this.service = service;
        setLocationRelativeTo(null); //centrar al ventana
    }
    
    private void initializeTable() {
        Class rowData[]=new Class[]{java.lang.Boolean.class,java.lang.Object.class,java.lang.Object.class,java.lang.Object.class,java.lang.Object.class};
        boolean columnasEditables[]={true,false,false,false,false};
        DefaultTableModel model = new DefaultTableModel(){
            public boolean isCellEditable(int row, int col){return columnasEditables[col];}
            public Class getColumnClass(int index){return rowData[index];}
        };
        model.setColumnIdentifiers(new String[]{"Seleccionar","Id", "Name", "Description","Price"});
        tblProducts.setModel(model);
    }
    

        private void fillTable(List<Product> listProducts) {
        initializeTable();
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
        Object rowData[] = new Object[5];//No columnas
        for (int i = 0; i < listProducts.size(); i++) {
            rdoSelect = null;
            rowData[0]=rdoSelect;
            rowData[1] = listProducts.get(i).getProductId();
            rowData[2] = listProducts.get(i).getName();
            rowData[3] = listProducts.get(i).getDescription();
            rowData[4] = listProducts.get(i).getPrice();
            model.addRow(rowData);
        }
        
    }

    private void fillTable(Product product) {
        initializeTable();
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
        //DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
        
        Object rowData[] = new Object[5];//No columnas
        rdoSelect = null;
        rowData[0]=rdoSelect;
        rowData[1]=product.getProductId();
        rowData[2]=product.getName();
        rowData[3]=product.getDescription();
        rowData[4] = product.getPrice();
        model.addRow(rowData);
        }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlCenter = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        pnlNorth = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rdoId = new javax.swing.JRadioButton();
        rdoName = new javax.swing.JRadioButton();
        rdoCategoryId = new javax.swing.JRadioButton();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnSearchAll = new javax.swing.JButton();
        rdoSelect = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        btnagregarCarrito = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BÃºsqueda de productos");

        pnlCenter.setLayout(new java.awt.BorderLayout());

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProducts);

        pnlCenter.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Buscar por:");
        pnlNorth.add(jLabel1);

        buttonGroup1.add(rdoId);
        rdoId.setSelected(true);
        rdoId.setText("Id");
        rdoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoIdActionPerformed(evt);
            }
        });
        pnlNorth.add(rdoId);

        buttonGroup1.add(rdoName);
        rdoName.setText("Nombre del producto");
        pnlNorth.add(rdoName);

        buttonGroup1.add(rdoCategoryId);
        rdoCategoryId.setText("CategoryID");
        rdoCategoryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoCategoryIdActionPerformed(evt);
            }
        });
        pnlNorth.add(rdoCategoryId);

        txtSearch.setPreferredSize(new java.awt.Dimension(62, 32));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        pnlNorth.add(txtSearch);

        btnSearch.setText("Buscar");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        pnlNorth.add(btnSearch);

        btnSearchAll.setText("Buscar Todos");
        btnSearchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAllActionPerformed(evt);
            }
        });
        pnlNorth.add(btnSearchAll);

        rdoSelect.setText("Seleccionar todos");
        rdoSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSelectActionPerformed(evt);
            }
        });
        pnlNorth.add(rdoSelect);

        getContentPane().add(pnlNorth, java.awt.BorderLayout.PAGE_START);

        btnagregarCarrito.setText("agregarCarrito");
        btnagregarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarCarritoActionPerformed(evt);
            }
        });
        jPanel1.add(btnagregarCarrito);

        btnClose.setText("Cerrar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnSearchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAllActionPerformed
        fillTable(service.findAllProducts());
    }//GEN-LAST:event_btnSearchAllActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        txtSearchActionPerformed(evt);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        String idText  = txtSearch.getText().trim();
        if (rdoId.isSelected()) {
            Long ide = Long.valueOf(idText);
            fillTable(service.findProductById(ide));
        }
        if (rdoName.isSelected()) {
            fillTable(service.findProductByName(idText));
        }
        if (rdoCategoryId.isSelected()) {
            fillTable(service.findProductsByCategoryById(Long.valueOf(idText)));
        }
    }//GEN-LAST:event_txtSearchActionPerformed

    private void rdoCategoryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoCategoryIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoCategoryIdActionPerformed

    private void rdoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoIdActionPerformed

    private void rdoSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSelectActionPerformed
        // TODO add your handling code here:
        
        List list = new ArrayList<>();
        for (int i = 0; i < tblProducts.getRowCount(); i++) {
            if (tblProducts.getValueAt(i, 0)!=null) {
                if (tblProducts.getValueAt(i, 0).equals(true)) {
                    ItemCompra item = new ItemCompra(1, service.findProductById((Long)tblProducts.getValueAt(i, 1)));
                    list.add(item);
                }
            }
        }
        carrito.setListProducts(list);
        
    }//GEN-LAST:event_rdoSelectActionPerformed

    private void btnagregarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarCarritoActionPerformed
        if(carrito == null){
            carrito = new GUICarrito(service);
        }
        carrito.setVisible(true);
        rdoSelectActionPerformed(evt);
    }//GEN-LAST:event_btnagregarCarritoActionPerformed
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchAll;
    private javax.swing.JButton btnagregarCarrito;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlNorth;
    private javax.swing.JRadioButton rdoCategoryId;
    private javax.swing.JRadioButton rdoId;
    private javax.swing.JRadioButton rdoName;
    private javax.swing.JCheckBox rdoSelect;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update() {
        fillTable(service.findAllProducts());
    }
}
