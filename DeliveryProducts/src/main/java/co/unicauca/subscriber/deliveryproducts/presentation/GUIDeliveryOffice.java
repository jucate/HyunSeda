
package co.unicauca.subscriber.deliveryproducts.presentation;

import co.com.hyunseda.market.dataAccess.Product;
import co.unicauca.subscriber.deliveryproducts.infra.ISubscriber;
import co.unicauca.subscriber.deliveryproducts.infra.RabbitListener;

import com.google.gson.Gson;
import javax.swing.DefaultListModel;

/**
 *
 * @author ahurtado, wpantoja
 */
public class GUIDeliveryOffice extends javax.swing.JFrame implements ISubscriber {

    DefaultListModel modelList;
    /**
     * Creates new form DeliveryOffice
     */
    public GUIDeliveryOffice() {
        initComponents();
        Runnable subscriber = new RabbitListener(this);
        modelList = new DefaultListModel();
        lstDeliveryOrders.setModel(modelList);
        new Thread(subscriber).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDeliveryOrders = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consumidor de mensajes");

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pedidos para entrega ");
        getContentPane().add(jLabel1, java.awt.BorderLayout.NORTH);

        jScrollPane1.setViewportView(lstDeliveryOrders);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIDeliveryOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIDeliveryOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIDeliveryOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIDeliveryOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUIDeliveryOffice gui = new GUIDeliveryOffice();
                gui.setSize(500, 400);
                gui.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstDeliveryOrders;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onMessage(String msg) {
      Gson gson = new Gson();
      Product product = gson.fromJson(msg, Product.class);
      modelList.addElement(product.getName());
      lstDeliveryOrders.paintImmediately(lstDeliveryOrders.getBounds());
    }
}
